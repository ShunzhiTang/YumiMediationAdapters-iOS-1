//
//  <%=class_name%>.m
//  Pods
//
//  Created by generator on <%=now%>.
//
//

#import "<%=class_name%>.h"
#import <YumiMediationSDK/YumiMediationAdapterRegistry.h>

@interface <%=class_name%> ()<YumiMediationNativeAdapter>

@property (nonatomic, weak) id<YumiMediationNativeAdapterDelegate> delegate;
@property (nonatomic) YumiMediationNativeProvider *provider;

@end

@implementation <%=class_name%>
/// when conforming to a protocol, any property the protocol defines won't be automatically synthesized
@synthesize disableImageLoading;

+ (void)load {
    [[YumiMediationAdapterRegistry registry] registerNativeAdapter:self
                                             forProviderID:kYumiMediationAdapterID<%=name%>
                                             requestType:YumiMediationSDKAdRequest];
}

#pragma mark - YumiMediationNativeAdapter
- (id<YumiMediationNativeAdapter>)initWithProvider:(YumiMediationNativeProvider *)provider
                                          delegate:(id<YumiMediationNativeAdapterDelegate>)delegate{
    self = [super init];

    self.delegate = delegate;
    self.provider = provider;

 	// TODO: setup code
 	
	return self;
}

- (void)requestAd:(NSUInteger)adCount{
	
}
- (void)registerViewForNativeAdapterWith:(UIView *)view
                          viewController:(nullable UIViewController *)viewController
                                nativeAd:(YumiMediationNativeModel *)nativeAd{

}

/// report impression when display the native ad.
- (void)reportImpressionForNativeAdapter:(YumiMediationNativeModel *)nativeAd view:(UIView *)view{
	
}
- (void)clickAd:(YumiMediationNativeModel *)nativeAd{
	
}

// TODO: implement third party sdk delegate and delegate to mediation sdk

@end
