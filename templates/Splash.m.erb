//
//  <%=class_name%>.m
//  Pods
//
//  Created by generator on <%=now%>.
//
//

#import "<%=class_name%>.h"
#import <YumiMediationSDK/YumiMediationAdapterRegistry.h>

@interface <%=class_name%> ()<YumiMediationSplashAdapter>

@property (nonatomic, weak) id<YumiMediationSplashAdapterDelegate> delegate;
@property (nonatomic) YumiMediationSplashProvider *provider;

@property (nonatomic) UIImage *launchImage;
@property (nonatomic, assign) NSUInteger fetchTime;

@end

@implementation <%=class_name%>

+ (void)load {
    [[YumiMediationAdapterRegistry registry] registerSplashAdapter:self
                                             forProviderID:kYumiMediationAdapterID<%=name%>
                                             requestType:YumiMediationSDKAdRequest];
}

#pragma mark - YumiMediationSplashAdapter
- (nonnull id<YumiMediationSplashAdapter>)initWithProvider:(nonnull YumiMediationSplashProvider *)provider delegate:(nonnull id<YumiMediationSplashAdapterDelegate>)delegate {
    self = [super init];

    self.delegate = delegate;
    self.provider = provider;

 	// TODO: setup code
 	
	return self;
}

- (void)requestAdAndShowInWindow:(nonnull UIWindow *)keyWindow withBottomView:(nonnull UIView *)bottomView {
    
}

- (void)setFetchTime:(NSUInteger)fetchTime {
    _fetchTime = fetchTime;
}

- (void)setLaunchImage:(nonnull UIImage *)launchImage {
    _launchImage = launchImage;
}

// TODO: implement third party sdk delegate and delegate to mediation sdk

@end
